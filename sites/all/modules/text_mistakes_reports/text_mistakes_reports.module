<?php

drupal_add_js(drupal_get_path('module', 'text_mistakes_reports') . '/js/popup.js');
drupal_add_js(['textMistakesReports' => [
        'maxLength' => variable_get('text_mistakes_reports_max_text_length', 10),
        'maxReports' => variable_get('text_mistakes_reports_max_reports', 3),
        'reportText' => variable_get('text_mistakes_reports_report_text', ''),
        'receiverEmail' => variable_get('text_mistakes_reports_receiver_email',  variable_get('site_mail', ''))
    ]], 'setting');

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path
 *   Which path of the site we're using to display help
 * @param arg
 *   Array that holds the current path as returned from arg() function
 * @return null|string
 */
function text_mistakes_reports_help($path, $arg) {
    switch ($path) {
        case 'admin/help#text_mistakes_reports':
            return t('A module that add popup to field types "long text" and "long text and summary" and it can send reports about mistakes to admin email.');
            break;
    }
}

/**
 * Implements hook_block_info().
 */
function text_mistakes_reports_block_info() {
    $blocks['text_mistakes_reports'] = [
        // The name that will appear in the block list.
        'info' => t('Sender of Text Mistakes Reports'),
        'status' => TRUE,
        'region' => 'Content',
        'visibility' => BLOCK_VISIBILITY_LISTED,
        'pages' => 'node/*',
    ];
    return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * Prepares the contents of the block.
 */
function text_mistakes_reports_block_view($delta = '') {
    switch ($delta) {
        case 'text_mistakes_reports':
            $block['content'] = [
                '#theme' => 'text_mistakes_reports_theme',
                '#type' => 'markup',
                '#temp' => "sdsd",
            ];
            return $block;
    }
}

function text_mistakes_reports_theme($existing, $type, $theme, $path) {
    return [
        'text_mistakes_reports_theme' => [
            'variables' => ['temp' => null],
            'template' => 'text_mistakes_reports',
        ],

    ];
}

/**
 * Implements hook_menu().
 */
function text_mistakes_reports_menu() {
    $items = array();

    $items['admin/config/content/text_mistakes_reports'] = array(
        'title' => 'Sender of Text Mistakes Reports',
        'description' => 'A module that add popup to field types "long text"',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('text_mistakes_reports_form'),
        'access arguments' => array('access administration pages'),
        'type' => MENU_NORMAL_ITEM,
    );

    return $items;
}

/**
 * Page callback: text_mistakes_reports settings
 *
 * @see text_mistakes_reports_menu()
 */
function text_mistakes_reports_form($form, &$form_state) {
    $form['text_mistakes_reports_receiver_email'] = array(
        '#type' => 'textfield',
        '#title' => t('Email where sending reports'),
        '#default_value' => variable_get('text_mistakes_reports_receiver_email', variable_get('site_mail', '')),
        '#required' => TRUE,
    );

    $form['text_mistakes_reports_max_text_length'] = array(
        '#type' => 'textfield',
        '#title' => t('Maximum size of text length'),
        '#default_value' => variable_get('text_mistakes_reports_max_text_length', 50),
        '#size' => 4,
        '#maxlength' => 4,
        '#description' => t('The maximum size of text that can be to report'),
        '#required' => TRUE,
    );

    $form['text_mistakes_reports_report_text'] = array(
        '#type' => 'textarea',
        '#title' => t('Report Text'),
        '#default_value' => variable_get('text_mistakes_reports_report_text', ''),
        '#size' => 4,
        '#maxlength' => 4,
        '#description' => t('The maximum size of text that can be to report'),
        '#required' => TRUE,
    );

    $form['text_mistakes_reports_max_reports'] = array(
        '#type' => 'textfield',
        '#title' => t('Maximum number of reports'),
        '#default_value' => variable_get('text_mistakes_reports_max_reports', 3),
        '#size' => 4,
        '#maxlength' => 4,
        '#description' => t('The maximum number of reports to send with one IP'),
        '#required' => TRUE,
    );

    return system_settings_form($form);
}

